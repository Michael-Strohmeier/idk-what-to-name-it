# -*- coding: utf-8 -*-
"""data_processing_basic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hm2DUiYdtoTTPC4I4LEWnG0PuYS7WpUa
"""

import pandas as pd
from sklearn.utils import shuffle

class DataReader():
  def __init__(self, file_path: str):
    self.file_path = file_path
    self.df = self.load_data()

  def get_file_extension(self) -> str:
    file_extension = self.file_path.split('.')[-1]
    return file_extension

  def load_data(self):
    file_extension = self.get_file_extension()
    if file_extension == 'csv':
      df = pd.read_csv(self.file_path)

    return df

  def train_test_split(self, percent_train: int, shuffle_data=True):
    dataset_length = len(self.df)
    n = int(dataset_length*(percent_train/100))

    if shuffle_data:
      self.df = shuffle(self.df)

    train = self.df[:n]
    test = self.df[n:]

    return train, test

  def drop_nan(self, column_name: str):
    self.df.dropna(subset=[column_name], inplace=True)

  def categorical_to_numerical(self, column_name: str) -> dict:
    """
    drops all NaN values
    convert self.df[column_name] to numerical data

    numerical_key = the key code that corresponds to its respective categorical data
    return dict({numerical_key: categorical_data})
    """
    self.df.dropna(subset=[column_name], inplace=True)

    categorical_dict = dict({})
    for i, data in enumerate(self.df[column_name].unique()):
      categorical_dict[data] = i

    self.df = self.df.replace({column_name: categorical_dict})
    
    return categorical_dict

  def value_counts(self, column_name):
    return self.df[column_name].value_counts()

dr = DataReader('titanic.csv')
dr.df['Embarked']

# column_to_turn_into_categorical_data = 'Embarked'
embarked_cat_code_dict = dr.categorical_to_numerical('Embarked')

len(dr.df)
print(embarked_cat_code_dict)
print(len(dr.df))

dr.value_counts('Embarked')

train, test = dr.train_test_split(66)

train.head(5)



